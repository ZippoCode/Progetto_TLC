[General]
description = "Progetto TLC"
network = rete
tkenv-plugin-path = ../../../etc/plugins
sim-time-limit = 600s


**.ospf.ospfConfig = xmldoc("Config.xml")
**.ospf.helloInterval = 2s

**.configurator.config = xmldoc("IPV4Config.xml")
**.configurator.addStaticRoutes=false
**.configurator.addDefaultRoutes = false
**.configurator.assignDisjunctSubnetAddresses = false


#UDP APP
#L_UDP1
**.L_UDP1*.numUdpApps = 2
**.L_UDP1.udpApp[0].typename = "UDPVideoStreamCli"
**.L_UDP1.udpApp[0].localPort = 14782
**.L_UDP1.udpApp[0].serverAddress ="L_UDP6"
**.L_UDP1.udpApp[0].serverPort = 13658
**.L_UDP1.udpApp[0].startTime = 190s
**.L_UDP1.udpApp[1].typename = "UDPEchoApp"
**.L_UDP1.udpApp[1].localPort = 10785

#L_UDP2
**.L_UDP2*.numUdpApps = 2
**.L_UDP2.udpApp[0].typename = "UDPBasicApp"
**.L_UDP2.udpApp[0].destAddresses = "L_UDP4"
**.L_UDP2.udpApp[0].destPort = 10785
**.L_UDP2.udpApp[0].messageLength = 128 bytes
**.L_UDP2.udpApp[0].startTime = 130s
**.L_UDP2.udpApp[0].sendInterval = exponential(0.3s)
**.L_UDP2.udpApp[0].stopTime = 481s
**.L_UDP2.udpApp[1].typename = "UDPEchoApp"
**.L_UDP2.udpApp[1].localPort = 25896

#L_UDP3
**.L_UDP3*.numUdpApps = 1
**.L_UDP3.udpApp[0].typename = "UDPBasicBurst"
**.L_UDP3.udpApp[0].destPort = 10785
**.L_UDP3.udpApp[0].messageLength = 10KiB
**.L_UDP3.udpApp[0].sendInterval = 0.5s
**.L_UDP3.udpApp[0].destAddresses = "L_UDP1 L_UDP4 L_UDP5"
**.L_UDP3.udpApp[0].startTime = 10s
**.L_UDP3.udpApp[0].burstDuration = 20s
**.L_UDP3.udpApp[0].sleepDuration = 5s
**.L_UDP3.udpApp[0].chooseDestAddrMode = "perBurst"

#L_UDP4
**.L_UDP4*.numUdpApps = 2
**.L_UDP4.udpApp[0].typename = "UDPEchoApp"
**.L_UDP4.udpApp[0].localPort = 10785
**.L_UDP4.udpApp[1].typename = "UDPVideoStreamCli"
**.L_UDP4.udpApp[1].localPort = 25478
**.L_UDP4.udpApp[1].serverAddress ="L_UDP6"
**.L_UDP4.udpApp[1].serverPort = 13658
**.L_UDP4.udpApp[1].startTime = 50s

#L_UDP5
**.L_UDP5*.numUdpApps = 2
**.L_UDP5.udpApp[0].typename = "UDPBasicApp"
**.L_UDP5.udpApp[0].destAddresses = "L_UDP2"
**.L_UDP5.udpApp[0].destPort = 25896
**.L_UDP5.udpApp[0].messageLength = 128 bytes
**.L_UDP5.udpApp[0].startTime = 80s
**.L_UDP5.udpApp[0].sendInterval = 10s
**.L_UDP5.udpApp[0].stopTime = 500s
**.L_UDP5.udpApp[1].typename = "UDPEchoApp"
**.L_UDP5.udpApp[1].localPort = 10785

#L_UDP6
**.L_UDP6*.numUdpApps = 1
**.L_UDP6.udpApp[0].typename = "UDPVideoStreamSvr"
**.L_UDP6.udpApp[0].localPort = 13658
**.L_UDP6.udpApp[0].sendInterval = 0.4s
**.L_UDP6.udpApp[0].packetLen = 1440B
**.L_UDP6.udpApp[0].videoSize = 1MiB

#TCP APP
#L_TCP1
**.L_TCP1*.numTcpApps = 1
**.L_TCP1*.tcpApp[0].typename = "TCPSessionApp"
**.L_TCP1*.tcpApp[0].active = true
**.L_TCP1*.tcpApp[0].localPort = 47785
**.L_TCP1*.tcpApp[0].connectAddress = "L_TCP3"
**.L_TCP1*.tcpApp[0].connectPort = 12345
**.L_TCP1*.tcpApp[0].tOpen = 220s
**.L_TCP1*.tcpApp[0].tSend = 1ms
**.L_TCP1*.tcpApp[0].sendBytes = 120MiB
**.L_TCP1*.tcpApp[0].sendScript = ""

#L_TCP2
**.L_TCP2*.numTcpApps = 1 
**.L_TCP2*.tcpApp[0].typename = "TCPEchoApp"
**.L_TCP2*.tcpApp[0].localPort = 45963
**.L_TCP2*.tcpApp[0].echoFactor = 2.0
**.L_TCP2*.tcpApp[0].echoDelay = 1.0s

#L_TCP3
**.L_TCP3*.numTcpApps = 1
**.L_TCP3*.tcpApp[0].typename = "TCPEchoApp"
**.L_TCP3*.tcpApp[0].localPort = 12345
**.L_TCP3*.tcpApp[0].echoFactor = 0.5
**.L_TCP3*.tcpApp[0].echoDelay = 0.8s

#L_TCP4
**.L_TCP4*.numTcpApps = 1
**.L_TCP4*.tcpApp[0].typename = "TCPSessionApp"
**.L_TCP4*.tcpApp[0].active = true
**.L_TCP4*.tcpApp[0].localPort = 25874
**.L_TCP4*.tcpApp[0].connectAddress = "L_TCP6"
**.L_TCP4*.tcpApp[0].connectPort = 58777
**.L_TCP4*.tcpApp[0].tOpen = 170s
**.L_TCP4*.tcpApp[0].tSend = 3ms
**.L_TCP4*.tcpApp[0].sendBytes = 80MiB
**.L_TCP4*.tcpApp[0].sendScript = ""

#L_TCP5
**.L_TCP5*.numTcpApps = 1
**.L_TCP5*.tcpApp[0].typename = "TCPSessionApp"
**.L_TCP5*.tcpApp[0].active = true
**.L_TCP5*.tcpApp[0].localPort = 11113
**.L_TCP5*.tcpApp[0].connectAddress = "L_TCP2"
**.L_TCP5*.tcpApp[0].connectPort = 45963
**.L_TCP5*.tcpApp[0].tOpen = 200s
**.L_TCP5*.tcpApp[0].tSend = 0.1ms
**.L_TCP5*.tcpApp[0].sendBytes = 100MiB
**.L_TCP5*.tcpApp[0].sendScript = ""

#L_TCP6
**.L_TCP6*.numTcpApps = 1
**.L_TCP6*.tcpApp[0].typename = "TCPEchoApp"
**.L_TCP6*.tcpApp[0].localPort = 58777
**.L_TCP6*.tcpApp[0].echoFactor = 1.0
**.L_TCP6*.tcpApp[0].echoDelay = 0.4s


#CONFIGURAZIONE
# tcp settings
**.tcp.advertisedWindow = 65535                      # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = false                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 536                                     # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TCPReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.recordStats = true                            # recording of seqNum etc. into output vectors enabled/disabled

# pcapRecorder settings
**.numPcapRecorders = 1

# ip settings
**.ip.procDelay = 0s
**.forwarding = false

# Ethernet settings
**.eth[*].numOutputHooks = 1
**.eth[*].outputHook[0].typename = "OrdinalBasedDropper" # Nop | ThruputMeter | OrdinalBasedDropper | OrdinalBasedDuplicator
**.eth[*].queueType = "DropTailQueue"
**.eth[*].queue.frameCapacity = 80   # packets

# Point to point settings
**.ppp[*].numOutputHooks = 1
**.ppp[*].outputHook[0].typename = "OrdinalBasedDropper" # Nop | ThruputMeter | OrdinalBasedDropper | OrdinalBasedDuplicator
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 100    # packets

# ARP settings
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s

[Config Caduta_nodo]
description = shutdown/startup node (dynamic topology)
**.hasStatus = true
*.scenarioManager.script = xmldoc("CadutaNodo.xml")

[Config Caduta_link]
description = connect/disconnect link (dynamic topology)
*.scenarioManager.script = xmldoc("CadutaLink.xml")